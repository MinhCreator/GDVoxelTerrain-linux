name: üõ†Ô∏è Builds GDExtension
on:
  release:
    types: [created]

  workflow_dispatch:
    inputs:
      run:
        description: 'accept to build'
        required: false

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug-x86_64
            name: Linux Debug x86_64
            runner: ubuntu-22.04
            target: template_debug
            platform: linux
            arch: x86_64
          - identifier: linux-release-x86_64
            name: Linux Release x86_64
            runner: ubuntu-22.04
            target: template_release
            platform: linux
            arch: x86_64
          

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0


      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip \
          build-essential \
              scons \
              pkg-config \
              libx11-dev \
              libxcursor-dev \
              libxinerama-dev \
              libgl1-mesa-dev \
              libglu1-mesa-dev \
              libasound2-dev \
              libpulse-dev \
              libudev-dev \
              libxi-dev \
              libxrandr-dev \
              libwayland-dev \
              libboost-all-dev\
              libtbb-dev
      
      - name: Install Python and SCons
        uses: actions/setup-python@v2

      - name: Install SCons
        run: |
          python -m pip install --upgrade pip
          python -m pip install scons
      - name: Set up SCons cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.scons-cache/
            ${{ github.workspace }}/**/.sconsign.dblite
            ${{ github.workspace }}/godot-cpp/gen/
          key: ${{ matrix.identifier }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.identifier }}-${{ github.ref }}-
            ${{ matrix.identifier }}-
      - name: Compile extension
        shell: bash
        env:
          SCONS_CACHE: '${{ github.workspace }}/.scons-cache/'
          SCONS_CACHE_LIMIT: 4096
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' -j2
          ls -l project/addons/*/bin/

      - name: Prepare artifacts with project files
        shell: bash
        run: |
          PROJECT_DIR="${{ github.workspace }}/project"
          ARTIFACT_DIR="${{ github.workspace }}/artifacts"
          
          # Copy root documentation to project directory
          cp -v "${{ github.workspace }}/README.md" "$PROJECT_DIR/"
          cp -v "${{ github.workspace }}/LICENSE" "$PROJECT_DIR/"

          # Create platform-specific zip
          mkdir -p "$ARTIFACT_DIR"
          ZIP_NAME="${{ matrix.identifier }}.zip"
          cd "$PROJECT_DIR"
          zip -r "$ZIP_NAME" .

          mv "$ZIP_NAME" "$ARTIFACT_DIR"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}  # Use existing tag from release creation
          files: |
            artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}